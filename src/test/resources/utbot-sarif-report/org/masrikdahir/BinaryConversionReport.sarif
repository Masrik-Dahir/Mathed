{
  "$schema" : "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version" : "2.1.0",
  "runs" : [ {
    "tool" : {
      "driver" : {
        "name" : "UnitTestBot",
        "organization" : "utbot.org",
        "version" : "1.0",
        "rules" : [ {
          "id" : "utbot.exception.NumberFormatException",
          "name" : "NumberFormatException",
          "shortDescription" : {
            "text" : "Unexpected NumberFormatException detected."
          },
          "fullDescription" : {
            "text" : "Seems like an exception NumberFormatException might be thrown."
          },
          "help" : {
            "text" : "https://docs.oracle.com/javase/8/docs/api/java/lang/NumberFormatException.html"
          }
        }, {
          "id" : "utbot.exception.TimeoutException",
          "name" : "TimeoutException",
          "shortDescription" : {
            "text" : "Unexpected TimeoutException detected."
          },
          "fullDescription" : {
            "text" : "Seems like an exception TimeoutException might be thrown."
          },
          "help" : {
            "text" : "https://docs.oracle.com/javase/8/docs/api/java/lang/TimeoutException.html"
          }
        }, {
          "id" : "utbot.exception.NullPointerException",
          "name" : "NullPointerException",
          "shortDescription" : {
            "text" : "Unexpected NullPointerException detected."
          },
          "fullDescription" : {
            "text" : "Seems like an exception NullPointerException might be thrown."
          },
          "help" : {
            "text" : "https://docs.oracle.com/javase/8/docs/api/java/lang/NullPointerException.html"
          }
        }, {
          "id" : "utbot.exception.ArrayIndexOutOfBoundsException",
          "name" : "ArrayIndexOutOfBoundsException",
          "shortDescription" : {
            "text" : "Unexpected ArrayIndexOutOfBoundsException detected."
          },
          "fullDescription" : {
            "text" : "Seems like an exception ArrayIndexOutOfBoundsException might be thrown."
          },
          "help" : {
            "text" : "https://docs.oracle.com/javase/8/docs/api/java/lang/ArrayIndexOutOfBoundsException.html"
          }
        } ]
      }
    },
    "results" : [ {
      "ruleId" : "utbot.exception.NumberFormatException",
      "level" : "error",
      "message" : {
        "text" : "Unexpected exception: java.lang.NumberFormatException: Zero length BigInteger.\nTest case: `binaryStringToDouble()`\n[Generated test for this case](1)"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/main/java/org/masrikdahir/BinaryConversion.java",
            "uriBaseId" : "%SRCROOT%"
          },
          "region" : {
            "startLine" : 56,
            "startColumn" : 9
          }
        }
      }, {
        "logicalLocations" : [ {
          "fullyQualifiedName" : "org.masrikdahir.BinaryConversion"
        } ]
      } ],
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/test/java/org/masrikdahir/BinaryConversionTest.java",
            "uriBaseId" : "%SRCROOT%"
          },
          "region" : {
            "startLine" : 23,
            "startColumn" : 5
          }
        }
      } ],
      "codeFlows" : [ {
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "message" : {
                "text" : "BinaryConversionTest.testBinaryStringToDoubleThrowsNFEWithEmptyString(BinaryConversionTest.java:30)"
              },
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "src/test/java/org/masrikdahir/BinaryConversionTest.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 30,
                  "startColumn" : 9
                }
              }
            }
          }, {
            "location" : {
              "message" : {
                "text" : "org.masrikdahir.BinaryConversion.binaryStringToDouble(BinaryConversion.java:51)"
              },
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "src/main/java/org/masrikdahir/BinaryConversion.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 51,
                  "startColumn" : 9
                }
              }
            }
          }, {
            "location" : {
              "message" : {
                "text" : "org.masrikdahir.BinaryConversion.stringToDouble(BinaryConversion.java:56)"
              },
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "src/main/java/org/masrikdahir/BinaryConversion.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 56,
                  "startColumn" : 9
                }
              }
            }
          }, {
            "location" : {
              "message" : {
                "text" : "java.base/java.math.BigInteger.<init>(BigInteger.java:484)"
              },
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "java/math/BigInteger.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 484
                }
              }
            }
          } ]
        } ]
      } ]
    }, {
      "ruleId" : "utbot.exception.TimeoutException",
      "level" : "error",
      "message" : {
        "text" : "Unexpected behavior: Timeout 0 ms for phase InvocationPhase elapsed, controller timeout - 1.\nTest case: `binaryStringToDouble(abc)`\n[Generated test for this case](1)"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/main/java/org/masrikdahir/BinaryConversion.java",
            "uriBaseId" : "%SRCROOT%"
          },
          "region" : {
            "startLine" : 50,
            "startColumn" : 5
          }
        }
      }, {
        "logicalLocations" : [ {
          "fullyQualifiedName" : "org.masrikdahir.BinaryConversion"
        } ]
      } ],
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/test/java/org/masrikdahir/BinaryConversionTest.java",
            "uriBaseId" : "%SRCROOT%"
          },
          "region" : {
            "startLine" : 43,
            "startColumn" : 5
          }
        }
      } ],
      "codeFlows" : [ {
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "message" : {
                "text" : "BinaryConversionTest.testBinaryStringToDoubleWithNonEmptyString(BinaryConversionTest.java:48)"
              },
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "src/test/java/org/masrikdahir/BinaryConversionTest.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 48,
                  "startColumn" : 9
                }
              }
            }
          } ]
        } ]
      } ]
    }, {
      "ruleId" : "utbot.exception.NullPointerException",
      "level" : "error",
      "message" : {
        "text" : "Unexpected exception: java.lang.NullPointerException.\nTest case: `StringtoBinary(null)`\n[Generated test for this case](1)"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/main/java/org/masrikdahir/BinaryConversion.java",
            "uriBaseId" : "%SRCROOT%"
          },
          "region" : {
            "startLine" : 9,
            "startColumn" : 9
          }
        }
      }, {
        "logicalLocations" : [ {
          "fullyQualifiedName" : "org.masrikdahir.BinaryConversion"
        } ]
      } ],
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/test/java/org/masrikdahir/BinaryConversionTest.java",
            "uriBaseId" : "%SRCROOT%"
          },
          "region" : {
            "startLine" : 83,
            "startColumn" : 5
          }
        }
      } ],
      "codeFlows" : [ {
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "message" : {
                "text" : "BinaryConversionTest.testStringtoBinary_StringContains(BinaryConversionTest.java:88)"
              },
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "src/test/java/org/masrikdahir/BinaryConversionTest.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 88,
                  "startColumn" : 9
                }
              }
            }
          }, {
            "location" : {
              "message" : {
                "text" : "org.masrikdahir.BinaryConversion.StringtoBinary(BinaryConversion.java:9)"
              },
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "src/main/java/org/masrikdahir/BinaryConversion.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 9,
                  "startColumn" : 9
                }
              }
            }
          } ]
        } ]
      } ]
    }, {
      "ruleId" : "utbot.exception.ArrayIndexOutOfBoundsException",
      "level" : "error",
      "message" : {
        "text" : "Unexpected exception: java.lang.ArrayIndexOutOfBoundsException: Index 0 out of bounds for length 0.\nTest case: `StringtoBinary(.)`\n[Generated test for this case](1)"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/main/java/org/masrikdahir/BinaryConversion.java",
            "uriBaseId" : "%SRCROOT%"
          },
          "region" : {
            "startLine" : 11,
            "startColumn" : 13
          }
        }
      }, {
        "logicalLocations" : [ {
          "fullyQualifiedName" : "org.masrikdahir.BinaryConversion"
        } ]
      } ],
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/test/java/org/masrikdahir/BinaryConversionTest.java",
            "uriBaseId" : "%SRCROOT%"
          },
          "region" : {
            "startLine" : 118,
            "startColumn" : 5
          }
        }
      } ],
      "codeFlows" : [ {
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "message" : {
                "text" : "BinaryConversionTest.testStringtoBinaryThrowsAIOOBEWithNonEmptyString(BinaryConversionTest.java:123)"
              },
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "src/test/java/org/masrikdahir/BinaryConversionTest.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 123,
                  "startColumn" : 9
                }
              }
            }
          }, {
            "location" : {
              "message" : {
                "text" : "org.masrikdahir.BinaryConversion.StringtoBinary(BinaryConversion.java:11)"
              },
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "src/main/java/org/masrikdahir/BinaryConversion.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 11,
                  "startColumn" : 13
                }
              }
            }
          } ]
        } ]
      } ]
    }, {
      "ruleId" : "utbot.exception.NumberFormatException",
      "level" : "error",
      "message" : {
        "text" : "Unexpected exception: java.lang.NumberFormatException: For input string: \"\u0000\u0000\".\nTest case: `StringtoBinary(<String>)`\n[Generated test for this case](1)"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/main/java/org/masrikdahir/BinaryConversion.java",
            "uriBaseId" : "%SRCROOT%"
          },
          "region" : {
            "startLine" : 16,
            "startColumn" : 13
          }
        }
      }, {
        "logicalLocations" : [ {
          "fullyQualifiedName" : "org.masrikdahir.BinaryConversion"
        } ]
      } ],
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/test/java/org/masrikdahir/BinaryConversionTest.java",
            "uriBaseId" : "%SRCROOT%"
          },
          "region" : {
            "startLine" : 130,
            "startColumn" : 5
          }
        }
      } ],
      "codeFlows" : [ {
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "message" : {
                "text" : "BinaryConversionTest.testStringtoBinary1(BinaryConversionTest.java:140)"
              },
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "src/test/java/org/masrikdahir/BinaryConversionTest.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 140,
                  "startColumn" : 9
                }
              }
            }
          }, {
            "location" : {
              "message" : {
                "text" : "org.masrikdahir.BinaryConversion.StringtoBinary(BinaryConversion.java:16)"
              },
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "src/main/java/org/masrikdahir/BinaryConversion.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 16,
                  "startColumn" : 13
                }
              }
            }
          }, {
            "location" : {
              "message" : {
                "text" : "java.base/java.lang.Long.parseUnsignedLong(Long.java:1087)"
              },
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "java/lang/Long.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 1087
                }
              }
            }
          }, {
            "location" : {
              "message" : {
                "text" : "java.base/java.lang.Long.parseUnsignedLong(Long.java:879)"
              },
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "java/lang/Long.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 879
                }
              }
            }
          }, {
            "location" : {
              "message" : {
                "text" : "java.base/java.lang.Long.parseLong(Long.java:678)"
              },
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "java/lang/Long.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 678
                }
              }
            }
          }, {
            "location" : {
              "message" : {
                "text" : "java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)"
              },
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "java/lang/NumberFormatException.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 65
                }
              }
            }
          } ]
        } ]
      } ]
    }, {
      "ruleId" : "utbot.exception.NumberFormatException",
      "level" : "error",
      "message" : {
        "text" : "Unexpected exception: java.lang.NumberFormatException: For input string: \"\u0000\u0000\".\nTest case: `StringtoBinary(<String>)`\n[Generated test for this case](1)"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/main/java/org/masrikdahir/BinaryConversion.java",
            "uriBaseId" : "%SRCROOT%"
          },
          "region" : {
            "startLine" : 11,
            "startColumn" : 13
          }
        }
      }, {
        "logicalLocations" : [ {
          "fullyQualifiedName" : "org.masrikdahir.BinaryConversion"
        } ]
      } ],
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/test/java/org/masrikdahir/BinaryConversionTest.java",
            "uriBaseId" : "%SRCROOT%"
          },
          "region" : {
            "startLine" : 144,
            "startColumn" : 5
          }
        }
      } ],
      "codeFlows" : [ {
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "message" : {
                "text" : "BinaryConversionTest.testStringtoBinary2(BinaryConversionTest.java:154)"
              },
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "src/test/java/org/masrikdahir/BinaryConversionTest.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 154,
                  "startColumn" : 9
                }
              }
            }
          }, {
            "location" : {
              "message" : {
                "text" : "org.masrikdahir.BinaryConversion.StringtoBinary(BinaryConversion.java:11)"
              },
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "src/main/java/org/masrikdahir/BinaryConversion.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 11,
                  "startColumn" : 13
                }
              }
            }
          }, {
            "location" : {
              "message" : {
                "text" : "java.base/java.lang.Long.parseUnsignedLong(Long.java:1087)"
              },
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "java/lang/Long.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 1087
                }
              }
            }
          }, {
            "location" : {
              "message" : {
                "text" : "java.base/java.lang.Long.parseUnsignedLong(Long.java:879)"
              },
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "java/lang/Long.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 879
                }
              }
            }
          }, {
            "location" : {
              "message" : {
                "text" : "java.base/java.lang.Long.parseLong(Long.java:678)"
              },
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "java/lang/Long.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 678
                }
              }
            }
          }, {
            "location" : {
              "message" : {
                "text" : "java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)"
              },
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "java/lang/NumberFormatException.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 65
                }
              }
            }
          } ]
        } ]
      } ]
    } ]
  } ]
}